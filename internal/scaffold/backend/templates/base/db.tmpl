{{- if eq .Language "js" }}
class DummyDB {
    constructor() {
        this.users = [
            {
                name: "John Doe",
                email: "john@doe.com"
            },
            {
                name: "Jane Doe",
                email: "jane@doe.com"
            }
        ];
    }
    findAll() {
        return this.users;
    }

    create(user) {
        this.users.push(user);
        return user;
    }

    update(user) {
        const index = this.users.findIndex(u => u.email === user.email);
        if (index !== -1) {
            this.users[index] = user;
        }
        return user;
    }

    delete(user) {
        const index = this.users.findIndex(u => u.email === user.email);
        if (index !== -1) {
            this.users.splice(index, 1);
        }
        return user;
    }
}

export default DummyDB;
{{- end }}
{{- if eq .Language "go" }}
package repository

import "myproject/model"

type DummyDB struct {
	data []model.User
}

func NewDummyDBClient() *DummyDB {
	return &DummyDB{
		data: []model.User{
			{Name: "John", Email: "john@doe.com"},
			{Name: "Jane", Email: "jane@doe.com"},
		},
	}
}

func (d *DummyDB) FindAll() []model.User {
	return d.data
}

func (d *DummyDB) Insert(user model.User) []model.User {
	d.data = append(d.data, user)
	return d.data
}

{{- end }}
{{- if eq .Language "python" }}

{{- end }}
